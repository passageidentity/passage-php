<?php
/**
 * ElementCustomizationTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Passage Management API
 *
 * Passage's management API to manage your Passage apps and users.
 *
 * The version of the OpenAPI document: 1
 * Contact: support@passage.id
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ElementCustomizationTest Class Doc Comment
 *
 * @category    Class
 * @description ElementCustomization
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ElementCustomizationTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ElementCustomization"
     */
    public function testElementCustomization()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "passage_container_background_color"
     */
    public function testPropertyPassageContainerBackgroundColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "passage_container_max_width"
     */
    public function testPropertyPassageContainerMaxWidth()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "passage_input_box_background_color"
     */
    public function testPropertyPassageInputBoxBackgroundColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "passage_input_box_border_radius"
     */
    public function testPropertyPassageInputBoxBorderRadius()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "passage_header_font_family"
     */
    public function testPropertyPassageHeaderFontFamily()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "passage_body_font_family"
     */
    public function testPropertyPassageBodyFontFamily()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "passage_header_text_color"
     */
    public function testPropertyPassageHeaderTextColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "passage_body_text_color"
     */
    public function testPropertyPassageBodyTextColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "passage_primary_button_background_color"
     */
    public function testPropertyPassagePrimaryButtonBackgroundColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "passage_primary_button_text_color"
     */
    public function testPropertyPassagePrimaryButtonTextColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "passage_primary_button_hover_color"
     */
    public function testPropertyPassagePrimaryButtonHoverColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "passage_primary_button_border_radius"
     */
    public function testPropertyPassagePrimaryButtonBorderRadius()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "passage_primary_button_border_color"
     */
    public function testPropertyPassagePrimaryButtonBorderColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "passage_primary_button_border_width"
     */
    public function testPropertyPassagePrimaryButtonBorderWidth()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "passage_secondary_button_background_color"
     */
    public function testPropertyPassageSecondaryButtonBackgroundColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "passage_secondary_button_text_color"
     */
    public function testPropertyPassageSecondaryButtonTextColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "passage_secondary_button_hover_color"
     */
    public function testPropertyPassageSecondaryButtonHoverColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "passage_secondary_button_border_radius"
     */
    public function testPropertyPassageSecondaryButtonBorderRadius()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "passage_secondary_button_border_color"
     */
    public function testPropertyPassageSecondaryButtonBorderColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "passage_secondary_button_border_width"
     */
    public function testPropertyPassageSecondaryButtonBorderWidth()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
